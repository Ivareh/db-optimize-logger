api:
  enabled: true
  address: 0.0.0.0:8686

sources:
  db-optimize-logger:
    type: docker_logs
    include_images:
      - dol

  explain-output:
    type: file
    include:
      - /var/log/explain_output/*.json
    read_from: beginning
    fingerprint:
      strategy: checksum
      lines: 1
    ignore_checkpoints: true
    #multiline:
    #  mode: halt_with
    #  condition_pattern: "^$"
    #  start_pattern: "^\\["
    #  timeout_ms: 100
    remove_after_secs: 3


  graphs-output:
    type: file
    include:
      - /var/log/graphs_output/*.json
    read_from: beginning
    fingerprint:
      strategy: checksum
      lines: 1
    ignore_checkpoints: true
    multiline:
      mode: halt_with
      condition_pattern: "^$"
      start_pattern: "^\\["
      timeout_ms: 100
    remove_after_secs: 3


transforms:
  transform-db-optimize-logs:
    type: remap
    inputs:
      - db-optimize-logger
    drop_on_abort: false
    file: /etc/vector/transformers/db-optimize-events.vrl
    timezone: local

  transform-explain-json:
    type: remap
    inputs:
      - explain-output
    drop_on_abort: false
    file: /etc/vector/transformers/explain_file_output.vrl
    timezone: local

  transform-graphs-json:
    type: remap
    inputs:
      - graphs-output
    drop_on_abort: false
    file: /etc/vector/transformers/graphs_file_output.vrl
    timezone: local


sinks:
  console:
    inputs:
      - transform-db-optimize-logs
      - transform-explain-json
      - transform-graphs-json
    target: stdout
    type: console
    encoding:
      codec: json

  loki:
    type: loki
    inputs:
      - transform-db-optimize-logs
      - transform-explain-json
      - transform-graphs-json
    endpoint: http://loki:3100
    out_of_order_action: accept
    compression: snappy
    encoding:
      codec: json
    labels:
      job: "vector"
      file: "{{ file }}"
    healthcheck: false


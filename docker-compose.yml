services:
  db-optimize-logger:
    container_name: dol
    image: dol
    env_file:
      - .env
    build:
      context: ./db-optimize-logger
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    networks:
      - ${NETWORK?Variable not set}
    volumes:
      - ./responses_output:/app/responses_output
      - ./db-optimize-logger/:/app


  vector:
    container_name: dol-vector
    image: timberio/vector:0.46.1-debian
    restart: "no"
    ports:
      - "8686:8686"
    env_file:
      - .env
    networks:
      - ${NETWORK?Variable not set}
    volumes:
      - ./responses_output:/var/log/responses_output
      - ./vector/vector.yaml:/etc/vector/vector.yaml:ro
      - ./vector/transformers:/etc/vector/transformers:ro
      - /run/user/1000/docker.sock:/var/run/docker.sock


  loki:
    container_name: dol-loki
    image: grafana/loki:main
    restart: "no"
    ports:
      - "3100:3100"
    env_file:
      - .env
    networks:
      - ${NETWORK?Variable not set}
    volumes:
      - ./loki.yaml:/etc/loki/local-config.yaml
      - loki-data:/var/lib/loki
    command: -config.file=/etc/loki/local-config.yaml


  grafana:
    container_name: dol-grafana
    image: grafana/grafana:latest
    restart: "no" # or use `on-failure` if you prefer automatic restarts on crashes
    ports:
      - "3000:3000"
    env_file:
      - .env
    networks:
      - ${NETWORK?Variable not set}
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME?Grafana username not set}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD?Grafan password not set}
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_BASIC_ENABLED=false
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning # single volume for provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    entrypoint: >
      sh -c "mkdir -p /etc/grafana/provisioning/datasources /etc/grafana/provisioning/dashboards /etc/grafana/provisioning/plugins /etc/grafana/provisioning/alerting &&
      /run.sh"  # ensure directories exist


volumes:
  grafana-data:
    name: "dol-grafana-data"
  loki-data:
    name: "dol-loki-data"
  responses_output:

networks:
  traefik-public:
    external: true
